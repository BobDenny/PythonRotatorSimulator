12-Oct-2021
-----------
* Following MS code.visualsudio.com/docs/python/environments#_create-a-virtual-environment <-- MUST SAVE THIS URL!!!!
  1. VSCode Terminal -> Install globally python3-venv (was already there)
  2. Read the Python info at https://docs.python.org/3/library/venv.html
  3. VSCode Terminal (already in the ~/RotatorDemo folder) Created the .venv virtual environment via python3 -m venv .venv ... 
     and it appeared in the left pane. within the opened folder. Cool. Then the popup appeared asking if I want to select it 
     for the workspace folder. Yes. But ... in the terminal 'which python3' reports /usr/bin/python3. So now what? Apparently
     the "Python Extension" will use this but not the terminal. More learning ahead.
  4. Command Palette: Ctrl-Shift-P -> python: Select Interpreter -> Select the one that has the .venv specified.
  5. BooYah!! Close out the terminal and open a new one. Now it plainly shows that the terminal is running in the VE.
  6. No more python3, 'which python' returns /home/pi/RotatorDemo/.venv/bin/python YEAH!!
  7. First task, upgrade the local pip from 18.1 to the current 21.2 'TATTOO INCANTATION' python -m pip install --upgrade pip
     Surprising result: Cache entry deserialization failed, entry ignored, but, 
     Using cached https://files.pythonhosted.org/packages/90/a9/1ea3a69a51dcc679724e3512fc2aa1668999eed59976f749134eb02229c8/pip-21.3-py3-none-any.whl
     net result is that my Pip is at 21.3, the current
  8. Readin onward, Command Palette -> python: select linter -> pylint (no prompt to install, it must be there)
  9. I still haven't installed the packages needed by this app. Is there a way to install per the requirements.txt?
  10. Command Palette: python: run linting. No obvious feedback. So I need to open a .py file..... Well, I opened app.py, and 
      immediately I got a popup that pylint is not installed. Go for it, yes. Tons of stuff got installed, a huge log of activity. 
  11. Sure enough PyLint immediately flaged the packages that are not in my VE. How to do this from requirements?? 
  12. Simple!! In the terminal window with ().venv) pip install -r requirements.txt -> success
  13. Damn the requirements.txt is missing flask-restx. Fix it and install manually. -> GOT IT!!!!!
* Try to run it by opening app.py in the editor and then Run menu -> Run without debugging. It starts and answers on http://192.168.0.42:5555/
* But in the Problems section of the lower area, 29 problems (lint stuff) 
* Note that PyLint runs when you save the file. Keep at it. Wait for the next run of shit.
* Found missing module docstring. LOSER!!! Multiple tries with huge cryptic shit.  I tried pip install various forms. 
  Still barfing. End of work. Oh doof! This hs a PyLint warning for missing documentation.
* Linting, and now I want to suppress annoying 'info' level lint messages like line too long. How? Where is PyLint? Ah ha! It is 
  installed into the virtual environment! Weird. /home/pi/RotatorDemo/.venv/bin/pylint and you can execute it in the VSCode
  terminal while the workspace is loaded. I got the latest Feb '21 Pylint doc on GoodReader.  ~/.pylintrc seems to be the key.
  The list of codes is at http://pylint-messages.wikidot.com/all-codes and I converted that to PDF and it is also on GoodReader.
  (a) Test put # pylint disable=C0301 at the very top of the file, poof! Line too long gone.
  (b) Use `pylint --generate-rcfile > ~/.pylintrc` then add to [MESSAGES CONTROL] disable= C0301 workspace
  -- WILL DO BOTH, SO SOURCES ON THIS PROJECT ARE SELF-DOCUMENTING --
* While linting shr.py, I got __init__ method from base class not called. Wow. 
* Damn linted the  whole thing with just # pylint: disable=C0301,C0103,C0111 and one W0612 Variables devno, cid defined for 
  illustration but not used in RotatorAPI.py.
* Test with TheSky -> ASCOM Remote Driver. Fail on the __init__ method for the base class dict. Lint called it out (shr.py). 
  Research needed here. OY!! So simple dict.__init__(self) -- the key  being 'self' argument. More just-in-time learning.

15-Oct-2021
-----------
* Change the Material Theme to palenight-high-contrast. Now I can see my selected line etc. 
* Now want to tie the Windows project (long since in Git and on the remote repo) to the RPI #1. I had hand copied the RPI files pver to Windows then committed to remote from there. After some study, the easiest way to get this on the RPi is to **clone** from the remote repo! THis means I need to once again create the virtual environment, and also make damn sure that doesn't get committed into the repo. The question is whethr I even need to do anything to connect the cloned repo via python remote? [git remote -v] and YES it's already connected. So really I just need to make that virtual environment.
  1. Open VSCode on the RPI and set the folder to the just-cloned RotatorDemo (the old one is RotatorDemoOld).
  2. Select a Python Interpreter -> Python 3.7.3 (64 bit)
  3. I Opened a app.py file and ... no lint! Did not kknow that the flask etc was not there. OH WAIT? Is it in the global Python?  YES!!! It almost ran from that!!! How did those things get there ?!?!?!? Oh well. Make the VENV from requirements.txt. `pip install -r requirements.txt` OK
  4. Again flask-restx is missing. pip install flask-restx - OK
  5. Run from VSCode Run Without Debugging -- OK!! Opened the browser OK!!
  6. OOPS!!!! I NEVER MADE THE .VENV I installed to the main Python environment ... see my command line above. **DOH** Well that's OK. At least I don't have stuff for GitIgnore
* Now the Source Control window is in the left hand pane as a forkish-icon. EXPLORE THIS!!!! It shows the edited Requirements.txt (which I edited on the Windows system to add flask-restx) that needs to be pulled. ALSO GIT-LENS IS SHOWING INFO. This is cool.
* Showing I changed requirements.txt on the RPi so added it then tried to commit and it reminded me to git config user.name and user.email. Done
* After the add it's asking me for a commit message. After I did that, I see a button "Sync Changes". I tried that and I see a popup "Git: ssh_askpass: exec(/usr/bin/ssh-askpass): No such file or directory. OK!! 
* I need to set up SSH keypairs so RPI #1 can access svn.dc3.com without asking for a password. My svn clone above asked for the password. Or I can figure out how to get the ssh-askpass applet into /usr/bin. No, let's get SSH to work right!!
* Well the SSH private keys go into ~/.ssh (like id_rsa)/. The venerabel keypair is at C:\Users\Robert B. Denny\Documents\A Office Procedures\SSH Keys for Raspberry Pi 4 (both). So first I need to put id_rsa at ~/.ssh. Then I need to have the public key id_rsa.pub in the ~/.rsa/known-hosts on the A2 svn.dc3.com site. Looking at this file, I added this
=====
[svn.dc3.com:7822],[70.167.219.235:7822] ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDggbr4AGexmH8PUwZ1b+KmtPUZFPH6TXgB/VhrIrza1m3AR7E9vmLWg6+Rjc2HBVvlZl4qWuTR5syWKWFK4jelko757tu+Pec7CpsmC224NwqH4TL8QGADMxF4cD5gZi/ZwG3wv2HeKnloDJkNTzUcKOllg84wc+/A7DntmVMyEF5ex7hWkJVTyUtij/hk+VtYV28JvjC3j37jVoezzW9acHfoiDN1qkCJLNhZMSSzNecOn2MRLj2QbruwXtk1r0MTq6eAilSReMiv7E5Uyr3SYC59g/Ld3fqEWPlh88YhpudT8P5xCDkH+C2jrREg00aTkZX26e5407LfTcMp9He3 rdenny@dc3.com
=====
and transferred back to a2.dc3.com. Now... will git on the RPi be able to sync?? Not yet, I got a WARNING UNPROTECTED PRIVATE KEY FILE! Permissions 0644 for /home/pi/.ssh/id_rsa are too open... etc. Tried Chmod 600 with user pi. Nope. still asking for ssh-askpass which means the pubkey login is not ok. The3 privkey does NOT need s password.
**BZZZT ** The pubkey goes into ~/.rsa/known-hosts on the A2 svn.dc3.com site you doofus. 
**SUCCESS** I can sync from VSCode on the RPI #1. ** BOOYAH**
* Damn after a successful sync I still have the old Bob's Journal on the PI after updting it on Windows. 
